plugins {
	id 'io.cornerstone.java-common-conventions'
	id 'java-library'
	id 'maven-publish'
}

publishing {
	publications {
		maven(MavenPublication) {
			from components.java
			versionMapping {
				usage("java-api") {
					def hasTestFixtures = project.configurations.collect {it.name}.contains('testFixturesRuntimeClasspath')
					fromResolutionOf(hasTestFixtures ? 'testFixturesRuntimeClasspath' : 'runtimeClasspath')
				}
				usage("java-runtime") {
					fromResolutionResult()
				}
			}
			suppressAllPomMetadataWarnings()
		}
	}
	if (rootProject.hasProperty('repoUrlPrefix')) {
		repositories {
			maven {
				if(version.endsWith("-SNAPSHOT")) {
					url "${repoUrlPrefix}/maven-snapshots/"
				} else {
					url "${repoUrlPrefix}/maven-releases/"
				}
				allowInsecureProtocol true
				credentials {
					username repoUser
					password repoPassword
				}
			}
		}
	}
}
