server:
  shutdown: graceful
  forward-headers-strategy: framework
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: never

spring.autoconfigure.exclude:
  - org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration

spring.datasource:
  name: ${spring.application.name}
  url: jdbc:mysql://${mysql.host}:${mysql.port}/${spring.application.name}?createDatabaseIfNotExist=true&serverTimezone=Asia/Shanghai&autoReconnectForPools=true&useUnicode=true&useServerPrepStmts=true&cachePrepStmts=true&tinyInt1isBit=false&socketTimeout=60000&sslMode=DISABLED&allowPublicKeyRetrieval=true
  username: ${mysql.username}
  password: ${mysql.password}
  hikari:
    maximumPoolSize: 100
    minimumIdle: 5
    idleTimeout: 1800000
    connectionTimeout: 10000
    maxLifetime: 7200000
    autoCommit: false

spring.jpa:
  open-in-view: false
  properties.hibernate:
    jdbc.fetch_size: 100
    jdbc.batch_size: 50
    default_batch_fetch_size: 10
    order_inserts: true
    order_updates: true
    auto_quote_keyword: true
    xml_mapping_enabled: false
    cdi.extensions: true

spring.mvc:
  problemdetails.enabled: false
  throw-exception-if-no-handler-found: true

spring.data.web:
  pageable:
    default-page-size: 10
    max-page-size: 100
    one-indexed-parameters: true

spring.data.redis:
  repositories.enabled: false
  timeout: 5s
  connect-timeout: 5s
  lettuce.pool:
    max-total: 50
    max-idle: 10
    min-idle: 1
    max-wait: 10s

spring.cache.redis.time-to-live: 300s

spring.task:
  execution:
    pool.maxSize: 100
    pool.queueCapacity: 10000
    shutdown.awaitTermination: true
    shutdown.awaitTerminationPeriod: 30s
  scheduling:
    pool.size: 5
    shutdown.awaitTermination: true
    shutdown.awaitTerminationPeriod: 30s

spring.jackson:
  default-property-inclusion: non_null
  date-format: yyyy-MM-dd'T'HH:mm:ss.SSS
  time-zone: Asia/Shanghai

spring.messages:
  basename: messages,i18n/messages,org.springframework.security.messages
  
security.permit-all-path-patterns:
  - /actuator/**
  - /assets/**

logging:
  config: classpath:log4j2.xml
  level.org.springframework.context.support.ResourceBundleMessageSource: ERROR

management.endpoints.web.exposure.include: [health, prometheus]
management.influx.metrics.export:
  enabled: false
  db: metrics
  step: 10s

management.prometheus.metrics.export:
  enabled: false
  pushgateway:
    enabled: false
    push-rate: 30S
    base-url: http://localhost:9091

management.tracing.enabled: false
jdbc.datasource-proxy.enabled: ${management.tracing.enabled}

springdoc.swagger-ui.enabled: false
springdoc.api-docs.enabled: ${springdoc.swagger-ui.enabled}

# user defined variables to expand
mysql:
  host: localhost
  port: 3306
  username: root
  password:

---
spring:
  config.activate.on-profile: dev|test
  devtools.livereload.enabled: false
  jackson.serialization.indent_output: true
  jpa:
    hibernate.ddl-auto: update
    properties.hibernate:
      hbm2ddl.default_constraint_mode: NO_CONSTRAINT
springdoc.swagger-ui.enabled: true
management.endpoints.web.exposure.include: "*"
management.tracing.sampling.probability: 1.0
management.tracing.span.minimum-duration: PT0.0S
logging:
  level:
    sql: TRACE
    org.hibernate.orm.jdbc.bind: TRACE
    org.springframework.orm.jpa.JpaTransactionManager: DEBUG
    web: DEBUG
    org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: TRACE
    io.cornerstone.core.web.DefaultRequestMappingHandlerMapping: TRACE

---
spring:
  config.activate.on-profile: test
  data.redis.enabled: false
  datasource:
    name: null
    url: jdbc:h2:mem:${spring.application.name};DB_CLOSE_ON_EXIT=FALSE

spring.security.user.password: "{bcrypt}$2a$10$g1WqDyVfiD4vEOQZr.yRZOnWlzuAs2gMiS/jILkmYfb22XTzx9Dlm"

spring.main.allow-bean-definition-overriding: true

logging:
  config: classpath:log4j2-test.xml

---
spring:
  config.activate.on-profile: prod

logging.log4j2.config.override: classpath:log4j2-with-kafka.xml

management.influx.metrics.export.enabled: true

management.prometheus.metrics.export.enabled: true

management.tracing.sampling.probability: 0.05

---
spring.config.activate.on-cloud-platform: kubernetes
# env MYSQL_PORT -> tcp://10.108.159.183:3306 cause Malformed database URL, use MYSQL_SERVICE_PORT instead
mysql:
  host: ${mysql.service.host:mysql.default.svc.cluster.local}
  port: ${mysql.service.port:3306}

spring.data.redis:
  host: ${redis.service.host:redis.default.svc.cluster.local}
  port: ${redis.service.port:6379}
